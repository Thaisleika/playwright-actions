name: Playwright Tests
on: #trigger -- comandos/condicoes que inicializam o test script nessas branches (push and pull_request)
  push:
    branches: [ main, master ] 
  pull_request:
    branches: [ main, master ]
jobs: # tarefas que devem ser executadas
  E2Etests:
    timeout-minutes: 60
    runs-on: ubuntu-latest #nessa etapa que defique onde vai rodar os testes Ex: Docker (onde vai rodar o teste?) agente de execu√ßao
    steps: #uses: ativando pluging no github actions
    - uses: actions/checkout@v4 #get code
    
    - uses: actions/setup-node@v4 #install Node 18
      with:
        node-version: lts/*
        
    - name: Install dependencies
      run: npm install

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Run E2E tests
      run: npx playwright test

    - uses: actions/upload-artifact@v4 #relatorio/report HTML: faz o upload do artefato encontrado nos testes e os publica nesse report
      if: ${{ !cancelled() }} 
      #ou colocamos a opcao de always() para que sempre haja um report mesmo que cancele ou pare a execucao do test
      with:
        name: playwright-report #nome do report
        path: playwright-report/ # nome da pasta
        retention-days: 30
